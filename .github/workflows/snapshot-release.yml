name: Snapshot Release
on:
  push:
    branches: ["main","feature/ci-snapshot-release"]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/deploy-gh-pages.yml'
      - '.github/workflows/create-docs.yml'
      - '.github/workflows/create-js-demo.yml'

permissions:
  contents: write
  issues: write
  pull-requests: write

concurrency:
  group: snapshot-${{ github.ref }}
  cancel-in-progress: true

jobs:
  snapshot-release:
    name: Publish Snapshot Release
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'dautovicharis' && !contains(github.event.head_commit.message, '[skip-snapshot]') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get snapshot version from Config.kt
        id: version
        run: |
          # Read chartsVersion directly from buildSrc Config.kt to avoid Gradle output issues
          set -euo pipefail
          CONFIG_FILE="buildSrc/src/main/kotlin/io/github/dautovicharis/charts/Config.kt"
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Config file not found: $CONFIG_FILE" >&2
            exit 1
          fi
          SNAPSHOT_VERSION=$(grep -E 'const val chartsVersion\s*=\s*"' "$CONFIG_FILE" | sed -E 's/.*"([^"]+)".*/\1/' | tr -d '\r' | xargs)
          if [ -z "${SNAPSHOT_VERSION:-}" ]; then
            echo "Failed to parse chartsVersion from $CONFIG_FILE" >&2
            exit 1
          fi
          echo "snapshot_version=${SNAPSHOT_VERSION}" >> "$GITHUB_OUTPUT"
          echo "Config chartsVersion: ${SNAPSHOT_VERSION}"

      - name: Check required secrets
        id: secrets_check
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        shell: bash
        run: |
          set -euo pipefail
          missing=0
          for v in MAVEN_CENTRAL_USERNAME MAVEN_CENTRAL_PASSWORD SIGNING_KEY_ID SIGNING_PASSWORD SIGNING_SECRET_KEY_RING_FILE; do
            if [ -z "${!v:-}" ]; then
              echo "Missing secret: $v" >&2
              missing=1
            fi
          done
          if [ "$missing" -eq 0 ]; then
            echo "can_publish=true" >> "$GITHUB_OUTPUT"
          else
            echo "can_publish=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Decode GPG key
        if: ${{ steps.secrets_check.outputs.can_publish == 'true' }}
        run: |
          echo "${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}" | base64 -d > secring.gpg
          echo "GPG key file decoded successfully"

      - name: Publish snapshot to Maven Central
        if: ${{ steps.secrets_check.outputs.can_publish == 'true' }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signing.keyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signing.password: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signing.secretKeyRingFile: ./secring.gpg
        run: |
          echo "Publishing snapshot version: ${{ steps.version.outputs.snapshot_version }}"
          ./gradlew :charts:publish --no-daemon --stacktrace

      - name: Comment on commit
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸš€ **Snapshot Release Published**\n\nVersion: \`${{ steps.version.outputs.snapshot_version }}\`\n\nThe snapshot is now available on Maven Central Snapshots repository.\n\nTo use this snapshot:\n\`\`\`kotlin\nimplementation("io.github.dautovicharis:charts:${{ steps.version.outputs.snapshot_version }}")\n\`\`\``
            })